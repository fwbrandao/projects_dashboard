{"ast":null,"code":"var _jsxFileName = \"/Users/nando/data_science_dashboard/data_science_projects/client/src/themes/themeProvider.jsx\";\nimport React, { useState } from 'react';\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { themeCreator } from './baseTheme';\nexport const ThemeContext = React.createContext(themeName => {});\n\nconst ThemeProvider = props => {\n  // Read current theme from localStorage or maybe from an api\n  const curThemeName = localStorage.getItem(\"appTheme\") || \"lightTheme\"; // State to hold the selected theme name\n\n  const [themeName, setThemeName] = useState(curThemeName); // Get the theme object by theme name\n\n  const theme = themeCreator(themeName);\n\n  const setTheme = themeName => {\n    localStorage.setItem(\"appTheme\", themeName);\n    setThemeName(themeName);\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: setTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, props.children));\n};\n\nexport default ThemeProvider;","map":{"version":3,"sources":["/Users/nando/data_science_dashboard/data_science_projects/client/src/themes/themeProvider.jsx"],"names":["React","useState","MuiThemeProvider","themeCreator","ThemeContext","createContext","themeName","ThemeProvider","props","curThemeName","localStorage","getItem","setThemeName","theme","setTheme","setItem","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,YAAT,QAA6B,aAA7B;AAGA,OAAO,MAAMC,YAAY,GAAGJ,KAAK,CAACK,aAAN,CAAqBC,SAAD,IAAe,CAAE,CAArC,CAArB;;AAEP,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B;AACA,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,YAAzD,CAF6B,CAI7B;;AACA,QAAM,CAACL,SAAD,EAAYM,YAAZ,IAA4BX,QAAQ,CAACQ,YAAD,CAA1C,CAL6B,CAO7B;;AACA,QAAMI,KAAK,GAAGV,YAAY,CAACG,SAAD,CAA1B;;AAEA,QAAMQ,QAAQ,GAAIR,SAAD,IAAe;AAC5BI,IAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCT,SAAjC;AACAM,IAAAA,YAAY,CAACN,SAAD,CAAZ;AACH,GAHD;;AAKA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEQ,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAED,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCL,KAAK,CAACQ,QAAvC,CADF,CADF;AAKH,CApBD;;AAsBA,eAAeT,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { themeCreator } from './baseTheme';\n\n\nexport const ThemeContext = React.createContext((themeName) => {});\n\nconst ThemeProvider = (props) => {\n    // Read current theme from localStorage or maybe from an api\n    const curThemeName = localStorage.getItem(\"appTheme\") || \"lightTheme\";\n\n    // State to hold the selected theme name\n    const [themeName, setThemeName] = useState(curThemeName);\n\n    // Get the theme object by theme name\n    const theme = themeCreator(themeName);\n\n    const setTheme = (themeName) => {\n        localStorage.setItem(\"appTheme\", themeName);\n        setThemeName(themeName);\n    }\n\n    return (\n      <ThemeContext.Provider value={setTheme}>\n        <MuiThemeProvider theme={theme}>{props.children}</MuiThemeProvider>\n      </ThemeContext.Provider>\n    );\n}\n\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}