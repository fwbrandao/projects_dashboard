{"ast":null,"code":"var _jsxFileName = \"/Users/nando/data_science_dashboard/data_science_projects/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Fab, Grid, makeStyles } from '@material-ui/core';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport NavBar from './core/navBar/index';\nimport TopicDialog from './core/topicDialog/index';\nimport topicInfo from './assets/topicsInfo';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    width: '100vw',\n    flexGrow: 1,\n    backgroundColor: theme.palette.backgroundColor.color,\n    backgroundSize: 'cover',\n    overflow: 'hidden',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    marginTop: '100px',\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: 'white'\n  },\n  textBox: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  shadow: {\n    boxShadow: theme.palette.backgroundColor.boxShadow,\n    backgroundColor: theme.palette.backgroundColor.color,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  grid: {\n    justifyContent: 'center'\n  },\n  gridItem: {\n    flexBasis: '29.333333%',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [openDialog, setDialogOpen] = useState(false);\n  const [topicData, setTopicData] = useState([]);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [predict, setPredict] = useState(0);\n  useEffect(() => {\n    fetch('/api/time').then(res => res.json()).then(data => {\n      setCurrentTime(data.time);\n    });\n    fetch('/api/predict').then(res => res.json()).then(data => {\n      setPredict(data.result);\n    });\n  }, []);\n\n  const handleClickOpen = item => {\n    setDialogOpen(true);\n    setTopicData(item);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.shadow,\n    borderRadius: 16,\n    width: \"75%\",\n    height: \"65%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.grid,\n    container: true,\n    spacing: 5,\n    dispaly: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, topicInfo.map(item => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    key: item.id,\n    color: \"primary\",\n    variant: \"extended\",\n    onClick: () => handleClickOpen(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, item.topicTitle))))), /*#__PURE__*/React.createElement(TopicDialog, {\n    open: openDialog,\n    closeDialog: handleDialogClose,\n    topicData: topicData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"The current time is \", currentTime), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Prediction is  \", predict)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nando/data_science_dashboard/data_science_projects/client/src/App.js"],"names":["React","useState","useEffect","Box","Fab","Grid","makeStyles","NavigationIcon","NavBar","TopicDialog","topicInfo","useStyles","theme","root","height","width","flexGrow","backgroundColor","palette","color","backgroundSize","overflow","backgroundRepeat","backgroundPosition","menuButton","marginRight","spacing","title","marginTop","display","justifyContent","textBox","alignItems","shadow","boxShadow","grid","gridItem","flexBasis","App","classes","openDialog","setDialogOpen","topicData","setTopicData","currentTime","setCurrentTime","predict","setPredict","fetch","then","res","json","data","time","result","handleClickOpen","item","handleDialogClose","map","id","topicTitle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Fab,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport NavBar from './core/navBar/index';\nimport TopicDialog from './core/topicDialog/index';\nimport topicInfo from './assets/topicsInfo'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    width: '100vw',\n    flexGrow: 1,\n    backgroundColor: theme.palette.backgroundColor.color,\n    backgroundSize: 'cover',\n    overflow: 'hidden',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    marginTop: '100px',\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: 'white'\n  },\n  textBox: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  shadow: {\n    boxShadow: theme.palette.backgroundColor.boxShadow,\n    backgroundColor: theme.palette.backgroundColor.color,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  grid: {\n    justifyContent: 'center',\n  },\n  gridItem: {\n    flexBasis: '29.333333%',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [openDialog, setDialogOpen] = useState(false);\n  const [topicData, setTopicData] = useState([]);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [predict, setPredict] = useState(0);\n\n  useEffect(() => {\n    fetch('/api/time').then(res => res.json()).then(data => {\n      setCurrentTime(data.time)\n    })\n    fetch('/api/predict').then(res => res.json()).then(data => {\n      setPredict(data.result)\n    })\n  }, []);\n\n  const handleClickOpen = (item) => {\n    setDialogOpen(true);\n    setTopicData(item)\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  return (\n    <Box >\n      <NavBar />\n      <Box\n        className={classes.root}\n        display={'flex'}\n        justifyContent={'center'}\n        alignItems={'center'}\n      >\n        <Box className={classes.shadow} borderRadius={16} width='75%' height='65%'>\n          <Grid className={classes.grid} container spacing={5} dispaly='flex' justifyContent='center'>\n              {topicInfo.map(item => (\n                <Grid item xs={4} className={classes.gridItem}>\n                    <Fab key={item.id} color=\"primary\" variant=\"extended\" onClick={() => handleClickOpen(item)}>\n                      {/* <NavigationIcon  className={classes.extendedIcon} /> */}\n                      {item.topicTitle}\n                    </Fab>\n                </Grid>\n              ))}\n          </Grid>\n        </Box>\n        <TopicDialog\n          open={openDialog}\n          closeDialog={handleDialogClose}\n          topicData={topicData}\n        />\n      </Box>\n      <Box>\n      <p>The current time is {currentTime}</p>\n      <p>Prediction is  {predict}</p>\n\n      </Box>\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}