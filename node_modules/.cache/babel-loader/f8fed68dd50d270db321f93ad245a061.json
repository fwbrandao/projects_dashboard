{"ast":null,"code":"var _jsxFileName = \"/Users/nando/data_science_dashboard/data_science_projects/client/src/core/stepper/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles, Stepper, Step, StepLabel, StepConnector, Button, Typography } from '@material-ui/core';\nimport Check from '@material-ui/icons/Check';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ThumbsUpDownIcon from '@material-ui/icons/ThumbsUpDown';\nconst useQontoStepIconStyles = makeStyles(theme => ({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#784af4'\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18\n  }\n}));\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, completed ? /*#__PURE__*/React.createElement(Check, {\n    className: classes.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 62\n    }\n  }));\n}\n\nQontoStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool\n};\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/React.createElement(PostAddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }\n    }),\n    2: /*#__PURE__*/React.createElement(ImageSearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 8\n      }\n    }),\n    3: /*#__PURE__*/React.createElement(ThumbsUpDownIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 8\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, icons[String(props.icon)]);\n}\n\nColorlibStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n  icon: PropTypes.node\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Add any News in the text box above', 'Run into the pipeline', 'Generate Results'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return '';\n\n    case 1:\n      return '';\n\n    case 2:\n      return '';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function Steppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 68\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    StepIconComponent: ColorlibStepIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, label)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, activeStep === steps.length - 1 ? 'Get Results' : 'Next')))));\n}","map":{"version":3,"sources":["/Users/nando/data_science_dashboard/data_science_projects/client/src/core/stepper/index.jsx"],"names":["React","PropTypes","clsx","makeStyles","withStyles","Stepper","Step","StepLabel","StepConnector","Button","Typography","Check","PostAddIcon","ImageSearchIcon","ThumbsUpDownIcon","useQontoStepIconStyles","theme","root","color","display","height","alignItems","active","circle","width","borderRadius","backgroundColor","completed","zIndex","fontSize","QontoStepIcon","props","classes","propTypes","bool","ColorlibConnector","alternativeLabel","top","backgroundImage","line","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","String","icon","node","useStyles","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","Steppers","activeStep","setActiveStep","useState","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles, Stepper, Step, StepLabel, StepConnector, Button, Typography} from '@material-ui/core';\nimport Check from '@material-ui/icons/Check';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\nimport ThumbsUpDownIcon from '@material-ui/icons/ThumbsUpDown';\n\nconst useQontoStepIconStyles = makeStyles(theme => ({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center',\n  },\n  active: {\n    color: '#784af4',\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor',\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18,\n  },\n}));\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n    </div>\n  );\n}\n\nQontoStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n};\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  active: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n  },\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <PostAddIcon />,\n    2: <ImageSearchIcon />,\n    3: <ThumbsUpDownIcon />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nColorlibStepIcon.propTypes = {\n  active: PropTypes.bool,\n  completed: PropTypes.bool,\n  icon: PropTypes.node,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Add any News in the text box above', 'Run into the pipeline', 'Generate Results'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return '';\n    case 1:\n      return '';\n    case 2:\n      return '';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function Steppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Get Results' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}